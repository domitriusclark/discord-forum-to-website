---
import type { APIThreadChannel, APIGuildForumTag } from 'discord-api-types/v9';

import Layout from "@layouts/Layout.astro";
import Sidebar from "@components/Sidebar.astro";
import DiscordMessage from "@components/DiscordMessage.astro";

import {
  getChannel,
  getChannelMessages,
  createChannelInvite,
  getForum,
  getGuildChannels,
  getGuildActiveThreads,
  getChannelArchivedThreads,
} from "@lib/discord";

interface Props {
  id: string;
  threads: APIThreadChannel[];
  archivedThreads: APIThreadChannel[];
  tags: APIGuildForumTag[]
}

export async function getStaticPaths() {  
  const channels = await getGuildChannels();
  const forumChannel = getForum(channels);
  const threads = await getGuildActiveThreads(forumChannel);
  const archivedThreads = await getChannelArchivedThreads(forumChannel.id);
  const tags = forumChannel.available_tags;

  const allThreads = [...threads, ...archivedThreads]

  return allThreads.map((thread => {    
      return {
        params: { id: thread.id},
        props: { 
          id: thread.id,
          threads,
          archivedThreads,
          tags
        }
      }
    }))
  
}

const { id, threads, archivedThreads, tags }: Props = Astro.props;

const channel = await getChannel(id);
const invite = await createChannelInvite(id);
const messages = await getChannelMessages(id);

---

<Layout title={`${channel.name}`}>
  <Sidebar
    id={id}
    threads={threads}
    archivedThreads={archivedThreads}
    tags={tags}
  />
  <main class="max-h-screen w-full px-6 py-4 overflow-scroll">
    <div class="flex flex-col gap-3">
      <h1 class="text-4xl">{channel.name}</h1>
      <a class="mt-4" href={`https://discord.gg/${invite.code}`}>
        Discord Invite
      </a>
    </div>
    <div class="mt-7">
      {
        messages
          .reverse()
          .map(async (message) => <DiscordMessage message={message} />)
      }
    </div>
  </main>
</Layout>
